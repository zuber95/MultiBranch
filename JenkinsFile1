pipeline
{
    agent any
    stages
    {
        stage('ContinuousDownload') 
        {
             steps
            {
                script
                {
                 try
                 {
                    git 'https://github.com/intelliqittrainings/maven.git'
                 }
                    catch(Exception e1)
                    {
                    mail bcc: '', body: 'Jenkins is unable to download the code from Git hub.', cc: '', from: '', replyTo: '', subject: 'Download failed : Please take necessary Action', to: 'mohdzuber857@gmail.com'
                   
                        exit(1)
                    }
                }
            }
        }
        stage('ContinuousBuild') 
        {
             steps
            {
                script
                {
                 try
                 {
                   sh 'mvn package'
                 }
                    catch(Exception e2)
                    {
                        mail bcc: '', body: 'Jenkins is unable to create a artifact , please try to fixed this issue.', cc: '', from: '', replyTo: '', subject: 'Build failed: Please take necessary Action', to: 'mohdzuber857@gmail.com'
                       
                        exit(1)
                    }
                }
            }
        }
        stage('ContinuousDeployment') 
        {
             steps
            {
                script
                {
                 try
                 {
                     deploy adapters: [tomcat9(credentialsId: '98cd7d74-5afd-4fa4-b2ba-fb898098b75d', path: '', url: 'http://172.31.38.178:8080')], contextPath: 'testapp', war: '**/*.war'
                 }
                    catch(Exception e3)
                    {
                        mail bcc: '', body: 'Jenkins is unable to deploy the code on QA server', cc: '', from: '', replyTo: '', subject: 'Deployment failed on QA server :Please take necessary steps', to: 'mohdzuber857@gmail.com'
                        exit(1)
                    }
                }
            }
        }
          stage('ContinuousTesting') 
        {
             steps
            {
                script
                {
                 try
                 {
                     git 'https://github.com/intelliqittrainings/FunctionalTesting.git'
                     sh 'java -jar /home/ubuntu/.jenkins/workspace/DeclarativePipeline3/testing.jar'
                 }
                    catch(Exception e4)
                    {
                        mail bcc: '', body: 'Jenkins is unable to Test the code on QA server', cc: '', from: '', replyTo: '', subject: 'Testing failed on QA server :Please take necessary steps', to: 'mohdzuber857@gmail.com'
                        exit(1)
                    }
                }
            }
        }
         stage('ContinuousDelivery') 
        {
             steps
            {
                script
                {
                 try
                 {
                     input message: 'Need approvals from the DM!', submitter: 'javed'
                    deploy adapters: [tomcat9(credentialsId: '98cd7d74-5afd-4fa4-b2ba-fb898098b75d', path: '', url: 'http://172.31.36.197:8080')], contextPath: 'prodapp', war: '**/*.war'
                 }
                    catch(Exception e5)
                    {
                        mail bcc: '', body: 'Jenkins is unable to Deploy the code on Prod server', cc: '', from: '', replyTo: '', subject: 'Deploy failed on Prod server :Please take necessary steps', to: 'mohdzuber857@gmail.com'
                        exit(1)
                    }
                }
            }
        }
         
    }
}
